#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_7093419124625442365) {
   out_7093419124625442365[0] = 0;
   out_7093419124625442365[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_7093419124625442365[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_7093419124625442365[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_7093419124625442365[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_7093419124625442365[5] = -sin(in_vec[1]);
   out_7093419124625442365[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7093419124625442365[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7093419124625442365[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_7093419124625442365[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_7093419124625442365[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_7093419124625442365[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_7093419124625442365[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7093419124625442365[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7093419124625442365[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_7093419124625442365[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_7093419124625442365[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_7093419124625442365[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_8122962677042080884) {
   out_8122962677042080884[0] = delta_x[0] + nom_x[0];
   out_8122962677042080884[1] = delta_x[1] + nom_x[1];
   out_8122962677042080884[2] = delta_x[2] + nom_x[2];
   out_8122962677042080884[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_8122962677042080884[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_8122962677042080884[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_8122962677042080884[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_8122962677042080884[7] = delta_x[6] + nom_x[7];
   out_8122962677042080884[8] = delta_x[7] + nom_x[8];
   out_8122962677042080884[9] = delta_x[8] + nom_x[9];
   out_8122962677042080884[10] = delta_x[9] + nom_x[10];
   out_8122962677042080884[11] = delta_x[10] + nom_x[11];
   out_8122962677042080884[12] = delta_x[11] + nom_x[12];
   out_8122962677042080884[13] = delta_x[12] + nom_x[13];
   out_8122962677042080884[14] = delta_x[13] + nom_x[14];
   out_8122962677042080884[15] = delta_x[14] + nom_x[15];
   out_8122962677042080884[16] = delta_x[15] + nom_x[16];
   out_8122962677042080884[17] = delta_x[16] + nom_x[17];
   out_8122962677042080884[18] = delta_x[17] + nom_x[18];
   out_8122962677042080884[19] = delta_x[18] + nom_x[19];
   out_8122962677042080884[20] = delta_x[19] + nom_x[20];
   out_8122962677042080884[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_2879191858436194061) {
   out_2879191858436194061[0] = -nom_x[0] + true_x[0];
   out_2879191858436194061[1] = -nom_x[1] + true_x[1];
   out_2879191858436194061[2] = -nom_x[2] + true_x[2];
   out_2879191858436194061[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_2879191858436194061[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_2879191858436194061[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_2879191858436194061[6] = -nom_x[7] + true_x[7];
   out_2879191858436194061[7] = -nom_x[8] + true_x[8];
   out_2879191858436194061[8] = -nom_x[9] + true_x[9];
   out_2879191858436194061[9] = -nom_x[10] + true_x[10];
   out_2879191858436194061[10] = -nom_x[11] + true_x[11];
   out_2879191858436194061[11] = -nom_x[12] + true_x[12];
   out_2879191858436194061[12] = -nom_x[13] + true_x[13];
   out_2879191858436194061[13] = -nom_x[14] + true_x[14];
   out_2879191858436194061[14] = -nom_x[15] + true_x[15];
   out_2879191858436194061[15] = -nom_x[16] + true_x[16];
   out_2879191858436194061[16] = -nom_x[17] + true_x[17];
   out_2879191858436194061[17] = -nom_x[18] + true_x[18];
   out_2879191858436194061[18] = -nom_x[19] + true_x[19];
   out_2879191858436194061[19] = -nom_x[20] + true_x[20];
   out_2879191858436194061[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_6891225504689681335) {
   out_6891225504689681335[0] = 1.0;
   out_6891225504689681335[1] = 0;
   out_6891225504689681335[2] = 0;
   out_6891225504689681335[3] = 0;
   out_6891225504689681335[4] = 0;
   out_6891225504689681335[5] = 0;
   out_6891225504689681335[6] = 0;
   out_6891225504689681335[7] = 0;
   out_6891225504689681335[8] = 0;
   out_6891225504689681335[9] = 0;
   out_6891225504689681335[10] = 0;
   out_6891225504689681335[11] = 0;
   out_6891225504689681335[12] = 0;
   out_6891225504689681335[13] = 0;
   out_6891225504689681335[14] = 0;
   out_6891225504689681335[15] = 0;
   out_6891225504689681335[16] = 0;
   out_6891225504689681335[17] = 0;
   out_6891225504689681335[18] = 0;
   out_6891225504689681335[19] = 0;
   out_6891225504689681335[20] = 0;
   out_6891225504689681335[21] = 0;
   out_6891225504689681335[22] = 1.0;
   out_6891225504689681335[23] = 0;
   out_6891225504689681335[24] = 0;
   out_6891225504689681335[25] = 0;
   out_6891225504689681335[26] = 0;
   out_6891225504689681335[27] = 0;
   out_6891225504689681335[28] = 0;
   out_6891225504689681335[29] = 0;
   out_6891225504689681335[30] = 0;
   out_6891225504689681335[31] = 0;
   out_6891225504689681335[32] = 0;
   out_6891225504689681335[33] = 0;
   out_6891225504689681335[34] = 0;
   out_6891225504689681335[35] = 0;
   out_6891225504689681335[36] = 0;
   out_6891225504689681335[37] = 0;
   out_6891225504689681335[38] = 0;
   out_6891225504689681335[39] = 0;
   out_6891225504689681335[40] = 0;
   out_6891225504689681335[41] = 0;
   out_6891225504689681335[42] = 0;
   out_6891225504689681335[43] = 0;
   out_6891225504689681335[44] = 1.0;
   out_6891225504689681335[45] = 0;
   out_6891225504689681335[46] = 0;
   out_6891225504689681335[47] = 0;
   out_6891225504689681335[48] = 0;
   out_6891225504689681335[49] = 0;
   out_6891225504689681335[50] = 0;
   out_6891225504689681335[51] = 0;
   out_6891225504689681335[52] = 0;
   out_6891225504689681335[53] = 0;
   out_6891225504689681335[54] = 0;
   out_6891225504689681335[55] = 0;
   out_6891225504689681335[56] = 0;
   out_6891225504689681335[57] = 0;
   out_6891225504689681335[58] = 0;
   out_6891225504689681335[59] = 0;
   out_6891225504689681335[60] = 0;
   out_6891225504689681335[61] = 0;
   out_6891225504689681335[62] = 0;
   out_6891225504689681335[63] = 0;
   out_6891225504689681335[64] = 0;
   out_6891225504689681335[65] = 0;
   out_6891225504689681335[66] = -0.5*state[4];
   out_6891225504689681335[67] = -0.5*state[5];
   out_6891225504689681335[68] = -0.5*state[6];
   out_6891225504689681335[69] = 0;
   out_6891225504689681335[70] = 0;
   out_6891225504689681335[71] = 0;
   out_6891225504689681335[72] = 0;
   out_6891225504689681335[73] = 0;
   out_6891225504689681335[74] = 0;
   out_6891225504689681335[75] = 0;
   out_6891225504689681335[76] = 0;
   out_6891225504689681335[77] = 0;
   out_6891225504689681335[78] = 0;
   out_6891225504689681335[79] = 0;
   out_6891225504689681335[80] = 0;
   out_6891225504689681335[81] = 0;
   out_6891225504689681335[82] = 0;
   out_6891225504689681335[83] = 0;
   out_6891225504689681335[84] = 0;
   out_6891225504689681335[85] = 0;
   out_6891225504689681335[86] = 0;
   out_6891225504689681335[87] = 0.5*state[3];
   out_6891225504689681335[88] = 0.5*state[6];
   out_6891225504689681335[89] = -0.5*state[5];
   out_6891225504689681335[90] = 0;
   out_6891225504689681335[91] = 0;
   out_6891225504689681335[92] = 0;
   out_6891225504689681335[93] = 0;
   out_6891225504689681335[94] = 0;
   out_6891225504689681335[95] = 0;
   out_6891225504689681335[96] = 0;
   out_6891225504689681335[97] = 0;
   out_6891225504689681335[98] = 0;
   out_6891225504689681335[99] = 0;
   out_6891225504689681335[100] = 0;
   out_6891225504689681335[101] = 0;
   out_6891225504689681335[102] = 0;
   out_6891225504689681335[103] = 0;
   out_6891225504689681335[104] = 0;
   out_6891225504689681335[105] = 0;
   out_6891225504689681335[106] = 0;
   out_6891225504689681335[107] = 0;
   out_6891225504689681335[108] = -0.5*state[6];
   out_6891225504689681335[109] = 0.5*state[3];
   out_6891225504689681335[110] = 0.5*state[4];
   out_6891225504689681335[111] = 0;
   out_6891225504689681335[112] = 0;
   out_6891225504689681335[113] = 0;
   out_6891225504689681335[114] = 0;
   out_6891225504689681335[115] = 0;
   out_6891225504689681335[116] = 0;
   out_6891225504689681335[117] = 0;
   out_6891225504689681335[118] = 0;
   out_6891225504689681335[119] = 0;
   out_6891225504689681335[120] = 0;
   out_6891225504689681335[121] = 0;
   out_6891225504689681335[122] = 0;
   out_6891225504689681335[123] = 0;
   out_6891225504689681335[124] = 0;
   out_6891225504689681335[125] = 0;
   out_6891225504689681335[126] = 0;
   out_6891225504689681335[127] = 0;
   out_6891225504689681335[128] = 0;
   out_6891225504689681335[129] = 0.5*state[5];
   out_6891225504689681335[130] = -0.5*state[4];
   out_6891225504689681335[131] = 0.5*state[3];
   out_6891225504689681335[132] = 0;
   out_6891225504689681335[133] = 0;
   out_6891225504689681335[134] = 0;
   out_6891225504689681335[135] = 0;
   out_6891225504689681335[136] = 0;
   out_6891225504689681335[137] = 0;
   out_6891225504689681335[138] = 0;
   out_6891225504689681335[139] = 0;
   out_6891225504689681335[140] = 0;
   out_6891225504689681335[141] = 0;
   out_6891225504689681335[142] = 0;
   out_6891225504689681335[143] = 0;
   out_6891225504689681335[144] = 0;
   out_6891225504689681335[145] = 0;
   out_6891225504689681335[146] = 0;
   out_6891225504689681335[147] = 0;
   out_6891225504689681335[148] = 0;
   out_6891225504689681335[149] = 0;
   out_6891225504689681335[150] = 0;
   out_6891225504689681335[151] = 0;
   out_6891225504689681335[152] = 0;
   out_6891225504689681335[153] = 1.0;
   out_6891225504689681335[154] = 0;
   out_6891225504689681335[155] = 0;
   out_6891225504689681335[156] = 0;
   out_6891225504689681335[157] = 0;
   out_6891225504689681335[158] = 0;
   out_6891225504689681335[159] = 0;
   out_6891225504689681335[160] = 0;
   out_6891225504689681335[161] = 0;
   out_6891225504689681335[162] = 0;
   out_6891225504689681335[163] = 0;
   out_6891225504689681335[164] = 0;
   out_6891225504689681335[165] = 0;
   out_6891225504689681335[166] = 0;
   out_6891225504689681335[167] = 0;
   out_6891225504689681335[168] = 0;
   out_6891225504689681335[169] = 0;
   out_6891225504689681335[170] = 0;
   out_6891225504689681335[171] = 0;
   out_6891225504689681335[172] = 0;
   out_6891225504689681335[173] = 0;
   out_6891225504689681335[174] = 0;
   out_6891225504689681335[175] = 1.0;
   out_6891225504689681335[176] = 0;
   out_6891225504689681335[177] = 0;
   out_6891225504689681335[178] = 0;
   out_6891225504689681335[179] = 0;
   out_6891225504689681335[180] = 0;
   out_6891225504689681335[181] = 0;
   out_6891225504689681335[182] = 0;
   out_6891225504689681335[183] = 0;
   out_6891225504689681335[184] = 0;
   out_6891225504689681335[185] = 0;
   out_6891225504689681335[186] = 0;
   out_6891225504689681335[187] = 0;
   out_6891225504689681335[188] = 0;
   out_6891225504689681335[189] = 0;
   out_6891225504689681335[190] = 0;
   out_6891225504689681335[191] = 0;
   out_6891225504689681335[192] = 0;
   out_6891225504689681335[193] = 0;
   out_6891225504689681335[194] = 0;
   out_6891225504689681335[195] = 0;
   out_6891225504689681335[196] = 0;
   out_6891225504689681335[197] = 1.0;
   out_6891225504689681335[198] = 0;
   out_6891225504689681335[199] = 0;
   out_6891225504689681335[200] = 0;
   out_6891225504689681335[201] = 0;
   out_6891225504689681335[202] = 0;
   out_6891225504689681335[203] = 0;
   out_6891225504689681335[204] = 0;
   out_6891225504689681335[205] = 0;
   out_6891225504689681335[206] = 0;
   out_6891225504689681335[207] = 0;
   out_6891225504689681335[208] = 0;
   out_6891225504689681335[209] = 0;
   out_6891225504689681335[210] = 0;
   out_6891225504689681335[211] = 0;
   out_6891225504689681335[212] = 0;
   out_6891225504689681335[213] = 0;
   out_6891225504689681335[214] = 0;
   out_6891225504689681335[215] = 0;
   out_6891225504689681335[216] = 0;
   out_6891225504689681335[217] = 0;
   out_6891225504689681335[218] = 0;
   out_6891225504689681335[219] = 1.0;
   out_6891225504689681335[220] = 0;
   out_6891225504689681335[221] = 0;
   out_6891225504689681335[222] = 0;
   out_6891225504689681335[223] = 0;
   out_6891225504689681335[224] = 0;
   out_6891225504689681335[225] = 0;
   out_6891225504689681335[226] = 0;
   out_6891225504689681335[227] = 0;
   out_6891225504689681335[228] = 0;
   out_6891225504689681335[229] = 0;
   out_6891225504689681335[230] = 0;
   out_6891225504689681335[231] = 0;
   out_6891225504689681335[232] = 0;
   out_6891225504689681335[233] = 0;
   out_6891225504689681335[234] = 0;
   out_6891225504689681335[235] = 0;
   out_6891225504689681335[236] = 0;
   out_6891225504689681335[237] = 0;
   out_6891225504689681335[238] = 0;
   out_6891225504689681335[239] = 0;
   out_6891225504689681335[240] = 0;
   out_6891225504689681335[241] = 1.0;
   out_6891225504689681335[242] = 0;
   out_6891225504689681335[243] = 0;
   out_6891225504689681335[244] = 0;
   out_6891225504689681335[245] = 0;
   out_6891225504689681335[246] = 0;
   out_6891225504689681335[247] = 0;
   out_6891225504689681335[248] = 0;
   out_6891225504689681335[249] = 0;
   out_6891225504689681335[250] = 0;
   out_6891225504689681335[251] = 0;
   out_6891225504689681335[252] = 0;
   out_6891225504689681335[253] = 0;
   out_6891225504689681335[254] = 0;
   out_6891225504689681335[255] = 0;
   out_6891225504689681335[256] = 0;
   out_6891225504689681335[257] = 0;
   out_6891225504689681335[258] = 0;
   out_6891225504689681335[259] = 0;
   out_6891225504689681335[260] = 0;
   out_6891225504689681335[261] = 0;
   out_6891225504689681335[262] = 0;
   out_6891225504689681335[263] = 1.0;
   out_6891225504689681335[264] = 0;
   out_6891225504689681335[265] = 0;
   out_6891225504689681335[266] = 0;
   out_6891225504689681335[267] = 0;
   out_6891225504689681335[268] = 0;
   out_6891225504689681335[269] = 0;
   out_6891225504689681335[270] = 0;
   out_6891225504689681335[271] = 0;
   out_6891225504689681335[272] = 0;
   out_6891225504689681335[273] = 0;
   out_6891225504689681335[274] = 0;
   out_6891225504689681335[275] = 0;
   out_6891225504689681335[276] = 0;
   out_6891225504689681335[277] = 0;
   out_6891225504689681335[278] = 0;
   out_6891225504689681335[279] = 0;
   out_6891225504689681335[280] = 0;
   out_6891225504689681335[281] = 0;
   out_6891225504689681335[282] = 0;
   out_6891225504689681335[283] = 0;
   out_6891225504689681335[284] = 0;
   out_6891225504689681335[285] = 1.0;
   out_6891225504689681335[286] = 0;
   out_6891225504689681335[287] = 0;
   out_6891225504689681335[288] = 0;
   out_6891225504689681335[289] = 0;
   out_6891225504689681335[290] = 0;
   out_6891225504689681335[291] = 0;
   out_6891225504689681335[292] = 0;
   out_6891225504689681335[293] = 0;
   out_6891225504689681335[294] = 0;
   out_6891225504689681335[295] = 0;
   out_6891225504689681335[296] = 0;
   out_6891225504689681335[297] = 0;
   out_6891225504689681335[298] = 0;
   out_6891225504689681335[299] = 0;
   out_6891225504689681335[300] = 0;
   out_6891225504689681335[301] = 0;
   out_6891225504689681335[302] = 0;
   out_6891225504689681335[303] = 0;
   out_6891225504689681335[304] = 0;
   out_6891225504689681335[305] = 0;
   out_6891225504689681335[306] = 0;
   out_6891225504689681335[307] = 1.0;
   out_6891225504689681335[308] = 0;
   out_6891225504689681335[309] = 0;
   out_6891225504689681335[310] = 0;
   out_6891225504689681335[311] = 0;
   out_6891225504689681335[312] = 0;
   out_6891225504689681335[313] = 0;
   out_6891225504689681335[314] = 0;
   out_6891225504689681335[315] = 0;
   out_6891225504689681335[316] = 0;
   out_6891225504689681335[317] = 0;
   out_6891225504689681335[318] = 0;
   out_6891225504689681335[319] = 0;
   out_6891225504689681335[320] = 0;
   out_6891225504689681335[321] = 0;
   out_6891225504689681335[322] = 0;
   out_6891225504689681335[323] = 0;
   out_6891225504689681335[324] = 0;
   out_6891225504689681335[325] = 0;
   out_6891225504689681335[326] = 0;
   out_6891225504689681335[327] = 0;
   out_6891225504689681335[328] = 0;
   out_6891225504689681335[329] = 1.0;
   out_6891225504689681335[330] = 0;
   out_6891225504689681335[331] = 0;
   out_6891225504689681335[332] = 0;
   out_6891225504689681335[333] = 0;
   out_6891225504689681335[334] = 0;
   out_6891225504689681335[335] = 0;
   out_6891225504689681335[336] = 0;
   out_6891225504689681335[337] = 0;
   out_6891225504689681335[338] = 0;
   out_6891225504689681335[339] = 0;
   out_6891225504689681335[340] = 0;
   out_6891225504689681335[341] = 0;
   out_6891225504689681335[342] = 0;
   out_6891225504689681335[343] = 0;
   out_6891225504689681335[344] = 0;
   out_6891225504689681335[345] = 0;
   out_6891225504689681335[346] = 0;
   out_6891225504689681335[347] = 0;
   out_6891225504689681335[348] = 0;
   out_6891225504689681335[349] = 0;
   out_6891225504689681335[350] = 0;
   out_6891225504689681335[351] = 1.0;
   out_6891225504689681335[352] = 0;
   out_6891225504689681335[353] = 0;
   out_6891225504689681335[354] = 0;
   out_6891225504689681335[355] = 0;
   out_6891225504689681335[356] = 0;
   out_6891225504689681335[357] = 0;
   out_6891225504689681335[358] = 0;
   out_6891225504689681335[359] = 0;
   out_6891225504689681335[360] = 0;
   out_6891225504689681335[361] = 0;
   out_6891225504689681335[362] = 0;
   out_6891225504689681335[363] = 0;
   out_6891225504689681335[364] = 0;
   out_6891225504689681335[365] = 0;
   out_6891225504689681335[366] = 0;
   out_6891225504689681335[367] = 0;
   out_6891225504689681335[368] = 0;
   out_6891225504689681335[369] = 0;
   out_6891225504689681335[370] = 0;
   out_6891225504689681335[371] = 0;
   out_6891225504689681335[372] = 0;
   out_6891225504689681335[373] = 1.0;
   out_6891225504689681335[374] = 0;
   out_6891225504689681335[375] = 0;
   out_6891225504689681335[376] = 0;
   out_6891225504689681335[377] = 0;
   out_6891225504689681335[378] = 0;
   out_6891225504689681335[379] = 0;
   out_6891225504689681335[380] = 0;
   out_6891225504689681335[381] = 0;
   out_6891225504689681335[382] = 0;
   out_6891225504689681335[383] = 0;
   out_6891225504689681335[384] = 0;
   out_6891225504689681335[385] = 0;
   out_6891225504689681335[386] = 0;
   out_6891225504689681335[387] = 0;
   out_6891225504689681335[388] = 0;
   out_6891225504689681335[389] = 0;
   out_6891225504689681335[390] = 0;
   out_6891225504689681335[391] = 0;
   out_6891225504689681335[392] = 0;
   out_6891225504689681335[393] = 0;
   out_6891225504689681335[394] = 0;
   out_6891225504689681335[395] = 1.0;
   out_6891225504689681335[396] = 0;
   out_6891225504689681335[397] = 0;
   out_6891225504689681335[398] = 0;
   out_6891225504689681335[399] = 0;
   out_6891225504689681335[400] = 0;
   out_6891225504689681335[401] = 0;
   out_6891225504689681335[402] = 0;
   out_6891225504689681335[403] = 0;
   out_6891225504689681335[404] = 0;
   out_6891225504689681335[405] = 0;
   out_6891225504689681335[406] = 0;
   out_6891225504689681335[407] = 0;
   out_6891225504689681335[408] = 0;
   out_6891225504689681335[409] = 0;
   out_6891225504689681335[410] = 0;
   out_6891225504689681335[411] = 0;
   out_6891225504689681335[412] = 0;
   out_6891225504689681335[413] = 0;
   out_6891225504689681335[414] = 0;
   out_6891225504689681335[415] = 0;
   out_6891225504689681335[416] = 0;
   out_6891225504689681335[417] = 1.0;
   out_6891225504689681335[418] = 0;
   out_6891225504689681335[419] = 0;
   out_6891225504689681335[420] = 0;
   out_6891225504689681335[421] = 0;
   out_6891225504689681335[422] = 0;
   out_6891225504689681335[423] = 0;
   out_6891225504689681335[424] = 0;
   out_6891225504689681335[425] = 0;
   out_6891225504689681335[426] = 0;
   out_6891225504689681335[427] = 0;
   out_6891225504689681335[428] = 0;
   out_6891225504689681335[429] = 0;
   out_6891225504689681335[430] = 0;
   out_6891225504689681335[431] = 0;
   out_6891225504689681335[432] = 0;
   out_6891225504689681335[433] = 0;
   out_6891225504689681335[434] = 0;
   out_6891225504689681335[435] = 0;
   out_6891225504689681335[436] = 0;
   out_6891225504689681335[437] = 0;
   out_6891225504689681335[438] = 0;
   out_6891225504689681335[439] = 1.0;
   out_6891225504689681335[440] = 0;
   out_6891225504689681335[441] = 0;
   out_6891225504689681335[442] = 0;
   out_6891225504689681335[443] = 0;
   out_6891225504689681335[444] = 0;
   out_6891225504689681335[445] = 0;
   out_6891225504689681335[446] = 0;
   out_6891225504689681335[447] = 0;
   out_6891225504689681335[448] = 0;
   out_6891225504689681335[449] = 0;
   out_6891225504689681335[450] = 0;
   out_6891225504689681335[451] = 0;
   out_6891225504689681335[452] = 0;
   out_6891225504689681335[453] = 0;
   out_6891225504689681335[454] = 0;
   out_6891225504689681335[455] = 0;
   out_6891225504689681335[456] = 0;
   out_6891225504689681335[457] = 0;
   out_6891225504689681335[458] = 0;
   out_6891225504689681335[459] = 0;
   out_6891225504689681335[460] = 0;
   out_6891225504689681335[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_8358383459853452579) {
   out_8358383459853452579[0] = dt*state[7] + state[0];
   out_8358383459853452579[1] = dt*state[8] + state[1];
   out_8358383459853452579[2] = dt*state[9] + state[2];
   out_8358383459853452579[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_8358383459853452579[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_8358383459853452579[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_8358383459853452579[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_8358383459853452579[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_8358383459853452579[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_8358383459853452579[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_8358383459853452579[10] = state[10];
   out_8358383459853452579[11] = state[11];
   out_8358383459853452579[12] = state[12];
   out_8358383459853452579[13] = state[13];
   out_8358383459853452579[14] = state[14];
   out_8358383459853452579[15] = state[15];
   out_8358383459853452579[16] = state[16];
   out_8358383459853452579[17] = state[17];
   out_8358383459853452579[18] = state[18];
   out_8358383459853452579[19] = state[19];
   out_8358383459853452579[20] = state[20];
   out_8358383459853452579[21] = state[21];
}
void F_fun(double *state, double dt, double *out_5351070853746756336) {
   out_5351070853746756336[0] = 1;
   out_5351070853746756336[1] = 0;
   out_5351070853746756336[2] = 0;
   out_5351070853746756336[3] = 0;
   out_5351070853746756336[4] = 0;
   out_5351070853746756336[5] = 0;
   out_5351070853746756336[6] = dt;
   out_5351070853746756336[7] = 0;
   out_5351070853746756336[8] = 0;
   out_5351070853746756336[9] = 0;
   out_5351070853746756336[10] = 0;
   out_5351070853746756336[11] = 0;
   out_5351070853746756336[12] = 0;
   out_5351070853746756336[13] = 0;
   out_5351070853746756336[14] = 0;
   out_5351070853746756336[15] = 0;
   out_5351070853746756336[16] = 0;
   out_5351070853746756336[17] = 0;
   out_5351070853746756336[18] = 0;
   out_5351070853746756336[19] = 0;
   out_5351070853746756336[20] = 0;
   out_5351070853746756336[21] = 0;
   out_5351070853746756336[22] = 1;
   out_5351070853746756336[23] = 0;
   out_5351070853746756336[24] = 0;
   out_5351070853746756336[25] = 0;
   out_5351070853746756336[26] = 0;
   out_5351070853746756336[27] = 0;
   out_5351070853746756336[28] = dt;
   out_5351070853746756336[29] = 0;
   out_5351070853746756336[30] = 0;
   out_5351070853746756336[31] = 0;
   out_5351070853746756336[32] = 0;
   out_5351070853746756336[33] = 0;
   out_5351070853746756336[34] = 0;
   out_5351070853746756336[35] = 0;
   out_5351070853746756336[36] = 0;
   out_5351070853746756336[37] = 0;
   out_5351070853746756336[38] = 0;
   out_5351070853746756336[39] = 0;
   out_5351070853746756336[40] = 0;
   out_5351070853746756336[41] = 0;
   out_5351070853746756336[42] = 0;
   out_5351070853746756336[43] = 0;
   out_5351070853746756336[44] = 1;
   out_5351070853746756336[45] = 0;
   out_5351070853746756336[46] = 0;
   out_5351070853746756336[47] = 0;
   out_5351070853746756336[48] = 0;
   out_5351070853746756336[49] = 0;
   out_5351070853746756336[50] = dt;
   out_5351070853746756336[51] = 0;
   out_5351070853746756336[52] = 0;
   out_5351070853746756336[53] = 0;
   out_5351070853746756336[54] = 0;
   out_5351070853746756336[55] = 0;
   out_5351070853746756336[56] = 0;
   out_5351070853746756336[57] = 0;
   out_5351070853746756336[58] = 0;
   out_5351070853746756336[59] = 0;
   out_5351070853746756336[60] = 0;
   out_5351070853746756336[61] = 0;
   out_5351070853746756336[62] = 0;
   out_5351070853746756336[63] = 0;
   out_5351070853746756336[64] = 0;
   out_5351070853746756336[65] = 0;
   out_5351070853746756336[66] = 1;
   out_5351070853746756336[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5351070853746756336[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_5351070853746756336[69] = 0;
   out_5351070853746756336[70] = 0;
   out_5351070853746756336[71] = 0;
   out_5351070853746756336[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5351070853746756336[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5351070853746756336[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5351070853746756336[75] = 0;
   out_5351070853746756336[76] = 0;
   out_5351070853746756336[77] = 0;
   out_5351070853746756336[78] = 0;
   out_5351070853746756336[79] = 0;
   out_5351070853746756336[80] = 0;
   out_5351070853746756336[81] = 0;
   out_5351070853746756336[82] = 0;
   out_5351070853746756336[83] = 0;
   out_5351070853746756336[84] = 0;
   out_5351070853746756336[85] = 0;
   out_5351070853746756336[86] = 0;
   out_5351070853746756336[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5351070853746756336[88] = 1;
   out_5351070853746756336[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_5351070853746756336[90] = 0;
   out_5351070853746756336[91] = 0;
   out_5351070853746756336[92] = 0;
   out_5351070853746756336[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5351070853746756336[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5351070853746756336[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5351070853746756336[96] = 0;
   out_5351070853746756336[97] = 0;
   out_5351070853746756336[98] = 0;
   out_5351070853746756336[99] = 0;
   out_5351070853746756336[100] = 0;
   out_5351070853746756336[101] = 0;
   out_5351070853746756336[102] = 0;
   out_5351070853746756336[103] = 0;
   out_5351070853746756336[104] = 0;
   out_5351070853746756336[105] = 0;
   out_5351070853746756336[106] = 0;
   out_5351070853746756336[107] = 0;
   out_5351070853746756336[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_5351070853746756336[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_5351070853746756336[110] = 1;
   out_5351070853746756336[111] = 0;
   out_5351070853746756336[112] = 0;
   out_5351070853746756336[113] = 0;
   out_5351070853746756336[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5351070853746756336[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5351070853746756336[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5351070853746756336[117] = 0;
   out_5351070853746756336[118] = 0;
   out_5351070853746756336[119] = 0;
   out_5351070853746756336[120] = 0;
   out_5351070853746756336[121] = 0;
   out_5351070853746756336[122] = 0;
   out_5351070853746756336[123] = 0;
   out_5351070853746756336[124] = 0;
   out_5351070853746756336[125] = 0;
   out_5351070853746756336[126] = 0;
   out_5351070853746756336[127] = 0;
   out_5351070853746756336[128] = 0;
   out_5351070853746756336[129] = 0;
   out_5351070853746756336[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5351070853746756336[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_5351070853746756336[132] = 1;
   out_5351070853746756336[133] = 0;
   out_5351070853746756336[134] = 0;
   out_5351070853746756336[135] = 0;
   out_5351070853746756336[136] = 0;
   out_5351070853746756336[137] = 0;
   out_5351070853746756336[138] = 0;
   out_5351070853746756336[139] = 0;
   out_5351070853746756336[140] = 0;
   out_5351070853746756336[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5351070853746756336[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5351070853746756336[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5351070853746756336[144] = 0;
   out_5351070853746756336[145] = 0;
   out_5351070853746756336[146] = 0;
   out_5351070853746756336[147] = 0;
   out_5351070853746756336[148] = 0;
   out_5351070853746756336[149] = 0;
   out_5351070853746756336[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5351070853746756336[151] = 0;
   out_5351070853746756336[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_5351070853746756336[153] = 0;
   out_5351070853746756336[154] = 1;
   out_5351070853746756336[155] = 0;
   out_5351070853746756336[156] = 0;
   out_5351070853746756336[157] = 0;
   out_5351070853746756336[158] = 0;
   out_5351070853746756336[159] = 0;
   out_5351070853746756336[160] = 0;
   out_5351070853746756336[161] = 0;
   out_5351070853746756336[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5351070853746756336[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5351070853746756336[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5351070853746756336[165] = 0;
   out_5351070853746756336[166] = 0;
   out_5351070853746756336[167] = 0;
   out_5351070853746756336[168] = 0;
   out_5351070853746756336[169] = 0;
   out_5351070853746756336[170] = 0;
   out_5351070853746756336[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_5351070853746756336[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_5351070853746756336[173] = 0;
   out_5351070853746756336[174] = 0;
   out_5351070853746756336[175] = 0;
   out_5351070853746756336[176] = 1;
   out_5351070853746756336[177] = 0;
   out_5351070853746756336[178] = 0;
   out_5351070853746756336[179] = 0;
   out_5351070853746756336[180] = 0;
   out_5351070853746756336[181] = 0;
   out_5351070853746756336[182] = 0;
   out_5351070853746756336[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5351070853746756336[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5351070853746756336[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5351070853746756336[186] = 0;
   out_5351070853746756336[187] = 0;
   out_5351070853746756336[188] = 0;
   out_5351070853746756336[189] = 0;
   out_5351070853746756336[190] = 0;
   out_5351070853746756336[191] = 0;
   out_5351070853746756336[192] = 0;
   out_5351070853746756336[193] = 0;
   out_5351070853746756336[194] = 0;
   out_5351070853746756336[195] = 0;
   out_5351070853746756336[196] = 0;
   out_5351070853746756336[197] = 0;
   out_5351070853746756336[198] = 1;
   out_5351070853746756336[199] = 0;
   out_5351070853746756336[200] = 0;
   out_5351070853746756336[201] = 0;
   out_5351070853746756336[202] = 0;
   out_5351070853746756336[203] = 0;
   out_5351070853746756336[204] = 0;
   out_5351070853746756336[205] = 0;
   out_5351070853746756336[206] = 0;
   out_5351070853746756336[207] = 0;
   out_5351070853746756336[208] = 0;
   out_5351070853746756336[209] = 0;
   out_5351070853746756336[210] = 0;
   out_5351070853746756336[211] = 0;
   out_5351070853746756336[212] = 0;
   out_5351070853746756336[213] = 0;
   out_5351070853746756336[214] = 0;
   out_5351070853746756336[215] = 0;
   out_5351070853746756336[216] = 0;
   out_5351070853746756336[217] = 0;
   out_5351070853746756336[218] = 0;
   out_5351070853746756336[219] = 0;
   out_5351070853746756336[220] = 1;
   out_5351070853746756336[221] = 0;
   out_5351070853746756336[222] = 0;
   out_5351070853746756336[223] = 0;
   out_5351070853746756336[224] = 0;
   out_5351070853746756336[225] = 0;
   out_5351070853746756336[226] = 0;
   out_5351070853746756336[227] = 0;
   out_5351070853746756336[228] = 0;
   out_5351070853746756336[229] = 0;
   out_5351070853746756336[230] = 0;
   out_5351070853746756336[231] = 0;
   out_5351070853746756336[232] = 0;
   out_5351070853746756336[233] = 0;
   out_5351070853746756336[234] = 0;
   out_5351070853746756336[235] = 0;
   out_5351070853746756336[236] = 0;
   out_5351070853746756336[237] = 0;
   out_5351070853746756336[238] = 0;
   out_5351070853746756336[239] = 0;
   out_5351070853746756336[240] = 0;
   out_5351070853746756336[241] = 0;
   out_5351070853746756336[242] = 1;
   out_5351070853746756336[243] = 0;
   out_5351070853746756336[244] = 0;
   out_5351070853746756336[245] = 0;
   out_5351070853746756336[246] = 0;
   out_5351070853746756336[247] = 0;
   out_5351070853746756336[248] = 0;
   out_5351070853746756336[249] = 0;
   out_5351070853746756336[250] = 0;
   out_5351070853746756336[251] = 0;
   out_5351070853746756336[252] = 0;
   out_5351070853746756336[253] = 0;
   out_5351070853746756336[254] = 0;
   out_5351070853746756336[255] = 0;
   out_5351070853746756336[256] = 0;
   out_5351070853746756336[257] = 0;
   out_5351070853746756336[258] = 0;
   out_5351070853746756336[259] = 0;
   out_5351070853746756336[260] = 0;
   out_5351070853746756336[261] = 0;
   out_5351070853746756336[262] = 0;
   out_5351070853746756336[263] = 0;
   out_5351070853746756336[264] = 1;
   out_5351070853746756336[265] = 0;
   out_5351070853746756336[266] = 0;
   out_5351070853746756336[267] = 0;
   out_5351070853746756336[268] = 0;
   out_5351070853746756336[269] = 0;
   out_5351070853746756336[270] = 0;
   out_5351070853746756336[271] = 0;
   out_5351070853746756336[272] = 0;
   out_5351070853746756336[273] = 0;
   out_5351070853746756336[274] = 0;
   out_5351070853746756336[275] = 0;
   out_5351070853746756336[276] = 0;
   out_5351070853746756336[277] = 0;
   out_5351070853746756336[278] = 0;
   out_5351070853746756336[279] = 0;
   out_5351070853746756336[280] = 0;
   out_5351070853746756336[281] = 0;
   out_5351070853746756336[282] = 0;
   out_5351070853746756336[283] = 0;
   out_5351070853746756336[284] = 0;
   out_5351070853746756336[285] = 0;
   out_5351070853746756336[286] = 1;
   out_5351070853746756336[287] = 0;
   out_5351070853746756336[288] = 0;
   out_5351070853746756336[289] = 0;
   out_5351070853746756336[290] = 0;
   out_5351070853746756336[291] = 0;
   out_5351070853746756336[292] = 0;
   out_5351070853746756336[293] = 0;
   out_5351070853746756336[294] = 0;
   out_5351070853746756336[295] = 0;
   out_5351070853746756336[296] = 0;
   out_5351070853746756336[297] = 0;
   out_5351070853746756336[298] = 0;
   out_5351070853746756336[299] = 0;
   out_5351070853746756336[300] = 0;
   out_5351070853746756336[301] = 0;
   out_5351070853746756336[302] = 0;
   out_5351070853746756336[303] = 0;
   out_5351070853746756336[304] = 0;
   out_5351070853746756336[305] = 0;
   out_5351070853746756336[306] = 0;
   out_5351070853746756336[307] = 0;
   out_5351070853746756336[308] = 1;
   out_5351070853746756336[309] = 0;
   out_5351070853746756336[310] = 0;
   out_5351070853746756336[311] = 0;
   out_5351070853746756336[312] = 0;
   out_5351070853746756336[313] = 0;
   out_5351070853746756336[314] = 0;
   out_5351070853746756336[315] = 0;
   out_5351070853746756336[316] = 0;
   out_5351070853746756336[317] = 0;
   out_5351070853746756336[318] = 0;
   out_5351070853746756336[319] = 0;
   out_5351070853746756336[320] = 0;
   out_5351070853746756336[321] = 0;
   out_5351070853746756336[322] = 0;
   out_5351070853746756336[323] = 0;
   out_5351070853746756336[324] = 0;
   out_5351070853746756336[325] = 0;
   out_5351070853746756336[326] = 0;
   out_5351070853746756336[327] = 0;
   out_5351070853746756336[328] = 0;
   out_5351070853746756336[329] = 0;
   out_5351070853746756336[330] = 1;
   out_5351070853746756336[331] = 0;
   out_5351070853746756336[332] = 0;
   out_5351070853746756336[333] = 0;
   out_5351070853746756336[334] = 0;
   out_5351070853746756336[335] = 0;
   out_5351070853746756336[336] = 0;
   out_5351070853746756336[337] = 0;
   out_5351070853746756336[338] = 0;
   out_5351070853746756336[339] = 0;
   out_5351070853746756336[340] = 0;
   out_5351070853746756336[341] = 0;
   out_5351070853746756336[342] = 0;
   out_5351070853746756336[343] = 0;
   out_5351070853746756336[344] = 0;
   out_5351070853746756336[345] = 0;
   out_5351070853746756336[346] = 0;
   out_5351070853746756336[347] = 0;
   out_5351070853746756336[348] = 0;
   out_5351070853746756336[349] = 0;
   out_5351070853746756336[350] = 0;
   out_5351070853746756336[351] = 0;
   out_5351070853746756336[352] = 1;
   out_5351070853746756336[353] = 0;
   out_5351070853746756336[354] = 0;
   out_5351070853746756336[355] = 0;
   out_5351070853746756336[356] = 0;
   out_5351070853746756336[357] = 0;
   out_5351070853746756336[358] = 0;
   out_5351070853746756336[359] = 0;
   out_5351070853746756336[360] = 0;
   out_5351070853746756336[361] = 0;
   out_5351070853746756336[362] = 0;
   out_5351070853746756336[363] = 0;
   out_5351070853746756336[364] = 0;
   out_5351070853746756336[365] = 0;
   out_5351070853746756336[366] = 0;
   out_5351070853746756336[367] = 0;
   out_5351070853746756336[368] = 0;
   out_5351070853746756336[369] = 0;
   out_5351070853746756336[370] = 0;
   out_5351070853746756336[371] = 0;
   out_5351070853746756336[372] = 0;
   out_5351070853746756336[373] = 0;
   out_5351070853746756336[374] = 1;
   out_5351070853746756336[375] = 0;
   out_5351070853746756336[376] = 0;
   out_5351070853746756336[377] = 0;
   out_5351070853746756336[378] = 0;
   out_5351070853746756336[379] = 0;
   out_5351070853746756336[380] = 0;
   out_5351070853746756336[381] = 0;
   out_5351070853746756336[382] = 0;
   out_5351070853746756336[383] = 0;
   out_5351070853746756336[384] = 0;
   out_5351070853746756336[385] = 0;
   out_5351070853746756336[386] = 0;
   out_5351070853746756336[387] = 0;
   out_5351070853746756336[388] = 0;
   out_5351070853746756336[389] = 0;
   out_5351070853746756336[390] = 0;
   out_5351070853746756336[391] = 0;
   out_5351070853746756336[392] = 0;
   out_5351070853746756336[393] = 0;
   out_5351070853746756336[394] = 0;
   out_5351070853746756336[395] = 0;
   out_5351070853746756336[396] = 1;
   out_5351070853746756336[397] = 0;
   out_5351070853746756336[398] = 0;
   out_5351070853746756336[399] = 0;
   out_5351070853746756336[400] = 0;
   out_5351070853746756336[401] = 0;
   out_5351070853746756336[402] = 0;
   out_5351070853746756336[403] = 0;
   out_5351070853746756336[404] = 0;
   out_5351070853746756336[405] = 0;
   out_5351070853746756336[406] = 0;
   out_5351070853746756336[407] = 0;
   out_5351070853746756336[408] = 0;
   out_5351070853746756336[409] = 0;
   out_5351070853746756336[410] = 0;
   out_5351070853746756336[411] = 0;
   out_5351070853746756336[412] = 0;
   out_5351070853746756336[413] = 0;
   out_5351070853746756336[414] = 0;
   out_5351070853746756336[415] = 0;
   out_5351070853746756336[416] = 0;
   out_5351070853746756336[417] = 0;
   out_5351070853746756336[418] = 1;
   out_5351070853746756336[419] = 0;
   out_5351070853746756336[420] = 0;
   out_5351070853746756336[421] = 0;
   out_5351070853746756336[422] = 0;
   out_5351070853746756336[423] = 0;
   out_5351070853746756336[424] = 0;
   out_5351070853746756336[425] = 0;
   out_5351070853746756336[426] = 0;
   out_5351070853746756336[427] = 0;
   out_5351070853746756336[428] = 0;
   out_5351070853746756336[429] = 0;
   out_5351070853746756336[430] = 0;
   out_5351070853746756336[431] = 0;
   out_5351070853746756336[432] = 0;
   out_5351070853746756336[433] = 0;
   out_5351070853746756336[434] = 0;
   out_5351070853746756336[435] = 0;
   out_5351070853746756336[436] = 0;
   out_5351070853746756336[437] = 0;
   out_5351070853746756336[438] = 0;
   out_5351070853746756336[439] = 0;
   out_5351070853746756336[440] = 1;
}
void h_4(double *state, double *unused, double *out_1663954682400385106) {
   out_1663954682400385106[0] = state[10] + state[13];
   out_1663954682400385106[1] = state[11] + state[14];
   out_1663954682400385106[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_4643929226346005397) {
   out_4643929226346005397[0] = 0;
   out_4643929226346005397[1] = 0;
   out_4643929226346005397[2] = 0;
   out_4643929226346005397[3] = 0;
   out_4643929226346005397[4] = 0;
   out_4643929226346005397[5] = 0;
   out_4643929226346005397[6] = 0;
   out_4643929226346005397[7] = 0;
   out_4643929226346005397[8] = 0;
   out_4643929226346005397[9] = 0;
   out_4643929226346005397[10] = 1;
   out_4643929226346005397[11] = 0;
   out_4643929226346005397[12] = 0;
   out_4643929226346005397[13] = 1;
   out_4643929226346005397[14] = 0;
   out_4643929226346005397[15] = 0;
   out_4643929226346005397[16] = 0;
   out_4643929226346005397[17] = 0;
   out_4643929226346005397[18] = 0;
   out_4643929226346005397[19] = 0;
   out_4643929226346005397[20] = 0;
   out_4643929226346005397[21] = 0;
   out_4643929226346005397[22] = 0;
   out_4643929226346005397[23] = 0;
   out_4643929226346005397[24] = 0;
   out_4643929226346005397[25] = 0;
   out_4643929226346005397[26] = 0;
   out_4643929226346005397[27] = 0;
   out_4643929226346005397[28] = 0;
   out_4643929226346005397[29] = 0;
   out_4643929226346005397[30] = 0;
   out_4643929226346005397[31] = 0;
   out_4643929226346005397[32] = 0;
   out_4643929226346005397[33] = 1;
   out_4643929226346005397[34] = 0;
   out_4643929226346005397[35] = 0;
   out_4643929226346005397[36] = 1;
   out_4643929226346005397[37] = 0;
   out_4643929226346005397[38] = 0;
   out_4643929226346005397[39] = 0;
   out_4643929226346005397[40] = 0;
   out_4643929226346005397[41] = 0;
   out_4643929226346005397[42] = 0;
   out_4643929226346005397[43] = 0;
   out_4643929226346005397[44] = 0;
   out_4643929226346005397[45] = 0;
   out_4643929226346005397[46] = 0;
   out_4643929226346005397[47] = 0;
   out_4643929226346005397[48] = 0;
   out_4643929226346005397[49] = 0;
   out_4643929226346005397[50] = 0;
   out_4643929226346005397[51] = 0;
   out_4643929226346005397[52] = 0;
   out_4643929226346005397[53] = 0;
   out_4643929226346005397[54] = 0;
   out_4643929226346005397[55] = 0;
   out_4643929226346005397[56] = 1;
   out_4643929226346005397[57] = 0;
   out_4643929226346005397[58] = 0;
   out_4643929226346005397[59] = 1;
   out_4643929226346005397[60] = 0;
   out_4643929226346005397[61] = 0;
   out_4643929226346005397[62] = 0;
   out_4643929226346005397[63] = 0;
   out_4643929226346005397[64] = 0;
   out_4643929226346005397[65] = 0;
}
void h_9(double *state, double *unused, double *out_6878549429972817913) {
   out_6878549429972817913[0] = state[10];
   out_6878549429972817913[1] = state[11];
   out_6878549429972817913[2] = state[12];
}
void H_9(double *state, double *unused, double *out_6515595912099098749) {
   out_6515595912099098749[0] = 0;
   out_6515595912099098749[1] = 0;
   out_6515595912099098749[2] = 0;
   out_6515595912099098749[3] = 0;
   out_6515595912099098749[4] = 0;
   out_6515595912099098749[5] = 0;
   out_6515595912099098749[6] = 0;
   out_6515595912099098749[7] = 0;
   out_6515595912099098749[8] = 0;
   out_6515595912099098749[9] = 0;
   out_6515595912099098749[10] = 1;
   out_6515595912099098749[11] = 0;
   out_6515595912099098749[12] = 0;
   out_6515595912099098749[13] = 0;
   out_6515595912099098749[14] = 0;
   out_6515595912099098749[15] = 0;
   out_6515595912099098749[16] = 0;
   out_6515595912099098749[17] = 0;
   out_6515595912099098749[18] = 0;
   out_6515595912099098749[19] = 0;
   out_6515595912099098749[20] = 0;
   out_6515595912099098749[21] = 0;
   out_6515595912099098749[22] = 0;
   out_6515595912099098749[23] = 0;
   out_6515595912099098749[24] = 0;
   out_6515595912099098749[25] = 0;
   out_6515595912099098749[26] = 0;
   out_6515595912099098749[27] = 0;
   out_6515595912099098749[28] = 0;
   out_6515595912099098749[29] = 0;
   out_6515595912099098749[30] = 0;
   out_6515595912099098749[31] = 0;
   out_6515595912099098749[32] = 0;
   out_6515595912099098749[33] = 1;
   out_6515595912099098749[34] = 0;
   out_6515595912099098749[35] = 0;
   out_6515595912099098749[36] = 0;
   out_6515595912099098749[37] = 0;
   out_6515595912099098749[38] = 0;
   out_6515595912099098749[39] = 0;
   out_6515595912099098749[40] = 0;
   out_6515595912099098749[41] = 0;
   out_6515595912099098749[42] = 0;
   out_6515595912099098749[43] = 0;
   out_6515595912099098749[44] = 0;
   out_6515595912099098749[45] = 0;
   out_6515595912099098749[46] = 0;
   out_6515595912099098749[47] = 0;
   out_6515595912099098749[48] = 0;
   out_6515595912099098749[49] = 0;
   out_6515595912099098749[50] = 0;
   out_6515595912099098749[51] = 0;
   out_6515595912099098749[52] = 0;
   out_6515595912099098749[53] = 0;
   out_6515595912099098749[54] = 0;
   out_6515595912099098749[55] = 0;
   out_6515595912099098749[56] = 1;
   out_6515595912099098749[57] = 0;
   out_6515595912099098749[58] = 0;
   out_6515595912099098749[59] = 0;
   out_6515595912099098749[60] = 0;
   out_6515595912099098749[61] = 0;
   out_6515595912099098749[62] = 0;
   out_6515595912099098749[63] = 0;
   out_6515595912099098749[64] = 0;
   out_6515595912099098749[65] = 0;
}
void h_10(double *state, double *unused, double *out_188068464861658843) {
   out_188068464861658843[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_188068464861658843[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_188068464861658843[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_4625396864627181921) {
   out_4625396864627181921[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4625396864627181921[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_4625396864627181921[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_4625396864627181921[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4625396864627181921[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4625396864627181921[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4625396864627181921[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4625396864627181921[7] = 0;
   out_4625396864627181921[8] = 0;
   out_4625396864627181921[9] = 0;
   out_4625396864627181921[10] = 0;
   out_4625396864627181921[11] = 0;
   out_4625396864627181921[12] = 0;
   out_4625396864627181921[13] = 0;
   out_4625396864627181921[14] = 0;
   out_4625396864627181921[15] = 0;
   out_4625396864627181921[16] = 1;
   out_4625396864627181921[17] = 0;
   out_4625396864627181921[18] = 0;
   out_4625396864627181921[19] = 1;
   out_4625396864627181921[20] = 0;
   out_4625396864627181921[21] = 0;
   out_4625396864627181921[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_4625396864627181921[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4625396864627181921[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_4625396864627181921[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4625396864627181921[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4625396864627181921[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4625396864627181921[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4625396864627181921[29] = 0;
   out_4625396864627181921[30] = 0;
   out_4625396864627181921[31] = 0;
   out_4625396864627181921[32] = 0;
   out_4625396864627181921[33] = 0;
   out_4625396864627181921[34] = 0;
   out_4625396864627181921[35] = 0;
   out_4625396864627181921[36] = 0;
   out_4625396864627181921[37] = 0;
   out_4625396864627181921[38] = 0;
   out_4625396864627181921[39] = 1;
   out_4625396864627181921[40] = 0;
   out_4625396864627181921[41] = 0;
   out_4625396864627181921[42] = 1;
   out_4625396864627181921[43] = 0;
   out_4625396864627181921[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_4625396864627181921[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_4625396864627181921[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4625396864627181921[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4625396864627181921[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4625396864627181921[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4625396864627181921[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4625396864627181921[51] = 0;
   out_4625396864627181921[52] = 0;
   out_4625396864627181921[53] = 0;
   out_4625396864627181921[54] = 0;
   out_4625396864627181921[55] = 0;
   out_4625396864627181921[56] = 0;
   out_4625396864627181921[57] = 0;
   out_4625396864627181921[58] = 0;
   out_4625396864627181921[59] = 0;
   out_4625396864627181921[60] = 0;
   out_4625396864627181921[61] = 0;
   out_4625396864627181921[62] = 1;
   out_4625396864627181921[63] = 0;
   out_4625396864627181921[64] = 0;
   out_4625396864627181921[65] = 1;
}
void h_12(double *state, double *unused, double *out_5577728301545643260) {
   out_5577728301545643260[0] = state[0];
   out_5577728301545643260[1] = state[1];
   out_5577728301545643260[2] = state[2];
}
void H_12(double *state, double *unused, double *out_1737329150696727599) {
   out_1737329150696727599[0] = 1;
   out_1737329150696727599[1] = 0;
   out_1737329150696727599[2] = 0;
   out_1737329150696727599[3] = 0;
   out_1737329150696727599[4] = 0;
   out_1737329150696727599[5] = 0;
   out_1737329150696727599[6] = 0;
   out_1737329150696727599[7] = 0;
   out_1737329150696727599[8] = 0;
   out_1737329150696727599[9] = 0;
   out_1737329150696727599[10] = 0;
   out_1737329150696727599[11] = 0;
   out_1737329150696727599[12] = 0;
   out_1737329150696727599[13] = 0;
   out_1737329150696727599[14] = 0;
   out_1737329150696727599[15] = 0;
   out_1737329150696727599[16] = 0;
   out_1737329150696727599[17] = 0;
   out_1737329150696727599[18] = 0;
   out_1737329150696727599[19] = 0;
   out_1737329150696727599[20] = 0;
   out_1737329150696727599[21] = 0;
   out_1737329150696727599[22] = 0;
   out_1737329150696727599[23] = 1;
   out_1737329150696727599[24] = 0;
   out_1737329150696727599[25] = 0;
   out_1737329150696727599[26] = 0;
   out_1737329150696727599[27] = 0;
   out_1737329150696727599[28] = 0;
   out_1737329150696727599[29] = 0;
   out_1737329150696727599[30] = 0;
   out_1737329150696727599[31] = 0;
   out_1737329150696727599[32] = 0;
   out_1737329150696727599[33] = 0;
   out_1737329150696727599[34] = 0;
   out_1737329150696727599[35] = 0;
   out_1737329150696727599[36] = 0;
   out_1737329150696727599[37] = 0;
   out_1737329150696727599[38] = 0;
   out_1737329150696727599[39] = 0;
   out_1737329150696727599[40] = 0;
   out_1737329150696727599[41] = 0;
   out_1737329150696727599[42] = 0;
   out_1737329150696727599[43] = 0;
   out_1737329150696727599[44] = 0;
   out_1737329150696727599[45] = 0;
   out_1737329150696727599[46] = 1;
   out_1737329150696727599[47] = 0;
   out_1737329150696727599[48] = 0;
   out_1737329150696727599[49] = 0;
   out_1737329150696727599[50] = 0;
   out_1737329150696727599[51] = 0;
   out_1737329150696727599[52] = 0;
   out_1737329150696727599[53] = 0;
   out_1737329150696727599[54] = 0;
   out_1737329150696727599[55] = 0;
   out_1737329150696727599[56] = 0;
   out_1737329150696727599[57] = 0;
   out_1737329150696727599[58] = 0;
   out_1737329150696727599[59] = 0;
   out_1737329150696727599[60] = 0;
   out_1737329150696727599[61] = 0;
   out_1737329150696727599[62] = 0;
   out_1737329150696727599[63] = 0;
   out_1737329150696727599[64] = 0;
   out_1737329150696727599[65] = 0;
}
void h_35(double *state, double *unused, double *out_352367680913121423) {
   out_352367680913121423[0] = state[7];
   out_352367680913121423[1] = state[8];
   out_352367680913121423[2] = state[9];
}
void H_35(double *state, double *unused, double *out_6037795407006570715) {
   out_6037795407006570715[0] = 0;
   out_6037795407006570715[1] = 0;
   out_6037795407006570715[2] = 0;
   out_6037795407006570715[3] = 0;
   out_6037795407006570715[4] = 0;
   out_6037795407006570715[5] = 0;
   out_6037795407006570715[6] = 0;
   out_6037795407006570715[7] = 1;
   out_6037795407006570715[8] = 0;
   out_6037795407006570715[9] = 0;
   out_6037795407006570715[10] = 0;
   out_6037795407006570715[11] = 0;
   out_6037795407006570715[12] = 0;
   out_6037795407006570715[13] = 0;
   out_6037795407006570715[14] = 0;
   out_6037795407006570715[15] = 0;
   out_6037795407006570715[16] = 0;
   out_6037795407006570715[17] = 0;
   out_6037795407006570715[18] = 0;
   out_6037795407006570715[19] = 0;
   out_6037795407006570715[20] = 0;
   out_6037795407006570715[21] = 0;
   out_6037795407006570715[22] = 0;
   out_6037795407006570715[23] = 0;
   out_6037795407006570715[24] = 0;
   out_6037795407006570715[25] = 0;
   out_6037795407006570715[26] = 0;
   out_6037795407006570715[27] = 0;
   out_6037795407006570715[28] = 0;
   out_6037795407006570715[29] = 0;
   out_6037795407006570715[30] = 1;
   out_6037795407006570715[31] = 0;
   out_6037795407006570715[32] = 0;
   out_6037795407006570715[33] = 0;
   out_6037795407006570715[34] = 0;
   out_6037795407006570715[35] = 0;
   out_6037795407006570715[36] = 0;
   out_6037795407006570715[37] = 0;
   out_6037795407006570715[38] = 0;
   out_6037795407006570715[39] = 0;
   out_6037795407006570715[40] = 0;
   out_6037795407006570715[41] = 0;
   out_6037795407006570715[42] = 0;
   out_6037795407006570715[43] = 0;
   out_6037795407006570715[44] = 0;
   out_6037795407006570715[45] = 0;
   out_6037795407006570715[46] = 0;
   out_6037795407006570715[47] = 0;
   out_6037795407006570715[48] = 0;
   out_6037795407006570715[49] = 0;
   out_6037795407006570715[50] = 0;
   out_6037795407006570715[51] = 0;
   out_6037795407006570715[52] = 0;
   out_6037795407006570715[53] = 1;
   out_6037795407006570715[54] = 0;
   out_6037795407006570715[55] = 0;
   out_6037795407006570715[56] = 0;
   out_6037795407006570715[57] = 0;
   out_6037795407006570715[58] = 0;
   out_6037795407006570715[59] = 0;
   out_6037795407006570715[60] = 0;
   out_6037795407006570715[61] = 0;
   out_6037795407006570715[62] = 0;
   out_6037795407006570715[63] = 0;
   out_6037795407006570715[64] = 0;
   out_6037795407006570715[65] = 0;
}
void h_32(double *state, double *unused, double *out_6025154312532695622) {
   out_6025154312532695622[0] = state[3];
   out_6025154312532695622[1] = state[4];
   out_6025154312532695622[2] = state[5];
   out_6025154312532695622[3] = state[6];
}
void H_32(double *state, double *unused, double *out_6350417101894015743) {
   out_6350417101894015743[0] = 0;
   out_6350417101894015743[1] = 0;
   out_6350417101894015743[2] = 0;
   out_6350417101894015743[3] = 1;
   out_6350417101894015743[4] = 0;
   out_6350417101894015743[5] = 0;
   out_6350417101894015743[6] = 0;
   out_6350417101894015743[7] = 0;
   out_6350417101894015743[8] = 0;
   out_6350417101894015743[9] = 0;
   out_6350417101894015743[10] = 0;
   out_6350417101894015743[11] = 0;
   out_6350417101894015743[12] = 0;
   out_6350417101894015743[13] = 0;
   out_6350417101894015743[14] = 0;
   out_6350417101894015743[15] = 0;
   out_6350417101894015743[16] = 0;
   out_6350417101894015743[17] = 0;
   out_6350417101894015743[18] = 0;
   out_6350417101894015743[19] = 0;
   out_6350417101894015743[20] = 0;
   out_6350417101894015743[21] = 0;
   out_6350417101894015743[22] = 0;
   out_6350417101894015743[23] = 0;
   out_6350417101894015743[24] = 0;
   out_6350417101894015743[25] = 0;
   out_6350417101894015743[26] = 1;
   out_6350417101894015743[27] = 0;
   out_6350417101894015743[28] = 0;
   out_6350417101894015743[29] = 0;
   out_6350417101894015743[30] = 0;
   out_6350417101894015743[31] = 0;
   out_6350417101894015743[32] = 0;
   out_6350417101894015743[33] = 0;
   out_6350417101894015743[34] = 0;
   out_6350417101894015743[35] = 0;
   out_6350417101894015743[36] = 0;
   out_6350417101894015743[37] = 0;
   out_6350417101894015743[38] = 0;
   out_6350417101894015743[39] = 0;
   out_6350417101894015743[40] = 0;
   out_6350417101894015743[41] = 0;
   out_6350417101894015743[42] = 0;
   out_6350417101894015743[43] = 0;
   out_6350417101894015743[44] = 0;
   out_6350417101894015743[45] = 0;
   out_6350417101894015743[46] = 0;
   out_6350417101894015743[47] = 0;
   out_6350417101894015743[48] = 0;
   out_6350417101894015743[49] = 1;
   out_6350417101894015743[50] = 0;
   out_6350417101894015743[51] = 0;
   out_6350417101894015743[52] = 0;
   out_6350417101894015743[53] = 0;
   out_6350417101894015743[54] = 0;
   out_6350417101894015743[55] = 0;
   out_6350417101894015743[56] = 0;
   out_6350417101894015743[57] = 0;
   out_6350417101894015743[58] = 0;
   out_6350417101894015743[59] = 0;
   out_6350417101894015743[60] = 0;
   out_6350417101894015743[61] = 0;
   out_6350417101894015743[62] = 0;
   out_6350417101894015743[63] = 0;
   out_6350417101894015743[64] = 0;
   out_6350417101894015743[65] = 0;
   out_6350417101894015743[66] = 0;
   out_6350417101894015743[67] = 0;
   out_6350417101894015743[68] = 0;
   out_6350417101894015743[69] = 0;
   out_6350417101894015743[70] = 0;
   out_6350417101894015743[71] = 0;
   out_6350417101894015743[72] = 1;
   out_6350417101894015743[73] = 0;
   out_6350417101894015743[74] = 0;
   out_6350417101894015743[75] = 0;
   out_6350417101894015743[76] = 0;
   out_6350417101894015743[77] = 0;
   out_6350417101894015743[78] = 0;
   out_6350417101894015743[79] = 0;
   out_6350417101894015743[80] = 0;
   out_6350417101894015743[81] = 0;
   out_6350417101894015743[82] = 0;
   out_6350417101894015743[83] = 0;
   out_6350417101894015743[84] = 0;
   out_6350417101894015743[85] = 0;
   out_6350417101894015743[86] = 0;
   out_6350417101894015743[87] = 0;
}
void h_13(double *state, double *unused, double *out_6300134216330282240) {
   out_6300134216330282240[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_6300134216330282240[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_6300134216330282240[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_735835764300229024) {
   out_735835764300229024[0] = 0;
   out_735835764300229024[1] = 0;
   out_735835764300229024[2] = 0;
   out_735835764300229024[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_735835764300229024[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_735835764300229024[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_735835764300229024[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_735835764300229024[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_735835764300229024[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_735835764300229024[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_735835764300229024[10] = 0;
   out_735835764300229024[11] = 0;
   out_735835764300229024[12] = 0;
   out_735835764300229024[13] = 0;
   out_735835764300229024[14] = 0;
   out_735835764300229024[15] = 0;
   out_735835764300229024[16] = 0;
   out_735835764300229024[17] = 0;
   out_735835764300229024[18] = 0;
   out_735835764300229024[19] = 0;
   out_735835764300229024[20] = 0;
   out_735835764300229024[21] = 0;
   out_735835764300229024[22] = 0;
   out_735835764300229024[23] = 0;
   out_735835764300229024[24] = 0;
   out_735835764300229024[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_735835764300229024[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_735835764300229024[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_735835764300229024[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_735835764300229024[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_735835764300229024[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_735835764300229024[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_735835764300229024[32] = 0;
   out_735835764300229024[33] = 0;
   out_735835764300229024[34] = 0;
   out_735835764300229024[35] = 0;
   out_735835764300229024[36] = 0;
   out_735835764300229024[37] = 0;
   out_735835764300229024[38] = 0;
   out_735835764300229024[39] = 0;
   out_735835764300229024[40] = 0;
   out_735835764300229024[41] = 0;
   out_735835764300229024[42] = 0;
   out_735835764300229024[43] = 0;
   out_735835764300229024[44] = 0;
   out_735835764300229024[45] = 0;
   out_735835764300229024[46] = 0;
   out_735835764300229024[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_735835764300229024[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_735835764300229024[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_735835764300229024[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_735835764300229024[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_735835764300229024[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_735835764300229024[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_735835764300229024[54] = 0;
   out_735835764300229024[55] = 0;
   out_735835764300229024[56] = 0;
   out_735835764300229024[57] = 0;
   out_735835764300229024[58] = 0;
   out_735835764300229024[59] = 0;
   out_735835764300229024[60] = 0;
   out_735835764300229024[61] = 0;
   out_735835764300229024[62] = 0;
   out_735835764300229024[63] = 0;
   out_735835764300229024[64] = 0;
   out_735835764300229024[65] = 0;
}
void h_14(double *state, double *unused, double *out_6878549429972817913) {
   out_6878549429972817913[0] = state[10];
   out_6878549429972817913[1] = state[11];
   out_6878549429972817913[2] = state[12];
}
void H_14(double *state, double *unused, double *out_6515595912099098749) {
   out_6515595912099098749[0] = 0;
   out_6515595912099098749[1] = 0;
   out_6515595912099098749[2] = 0;
   out_6515595912099098749[3] = 0;
   out_6515595912099098749[4] = 0;
   out_6515595912099098749[5] = 0;
   out_6515595912099098749[6] = 0;
   out_6515595912099098749[7] = 0;
   out_6515595912099098749[8] = 0;
   out_6515595912099098749[9] = 0;
   out_6515595912099098749[10] = 1;
   out_6515595912099098749[11] = 0;
   out_6515595912099098749[12] = 0;
   out_6515595912099098749[13] = 0;
   out_6515595912099098749[14] = 0;
   out_6515595912099098749[15] = 0;
   out_6515595912099098749[16] = 0;
   out_6515595912099098749[17] = 0;
   out_6515595912099098749[18] = 0;
   out_6515595912099098749[19] = 0;
   out_6515595912099098749[20] = 0;
   out_6515595912099098749[21] = 0;
   out_6515595912099098749[22] = 0;
   out_6515595912099098749[23] = 0;
   out_6515595912099098749[24] = 0;
   out_6515595912099098749[25] = 0;
   out_6515595912099098749[26] = 0;
   out_6515595912099098749[27] = 0;
   out_6515595912099098749[28] = 0;
   out_6515595912099098749[29] = 0;
   out_6515595912099098749[30] = 0;
   out_6515595912099098749[31] = 0;
   out_6515595912099098749[32] = 0;
   out_6515595912099098749[33] = 1;
   out_6515595912099098749[34] = 0;
   out_6515595912099098749[35] = 0;
   out_6515595912099098749[36] = 0;
   out_6515595912099098749[37] = 0;
   out_6515595912099098749[38] = 0;
   out_6515595912099098749[39] = 0;
   out_6515595912099098749[40] = 0;
   out_6515595912099098749[41] = 0;
   out_6515595912099098749[42] = 0;
   out_6515595912099098749[43] = 0;
   out_6515595912099098749[44] = 0;
   out_6515595912099098749[45] = 0;
   out_6515595912099098749[46] = 0;
   out_6515595912099098749[47] = 0;
   out_6515595912099098749[48] = 0;
   out_6515595912099098749[49] = 0;
   out_6515595912099098749[50] = 0;
   out_6515595912099098749[51] = 0;
   out_6515595912099098749[52] = 0;
   out_6515595912099098749[53] = 0;
   out_6515595912099098749[54] = 0;
   out_6515595912099098749[55] = 0;
   out_6515595912099098749[56] = 1;
   out_6515595912099098749[57] = 0;
   out_6515595912099098749[58] = 0;
   out_6515595912099098749[59] = 0;
   out_6515595912099098749[60] = 0;
   out_6515595912099098749[61] = 0;
   out_6515595912099098749[62] = 0;
   out_6515595912099098749[63] = 0;
   out_6515595912099098749[64] = 0;
   out_6515595912099098749[65] = 0;
}
void h_33(double *state, double *unused, double *out_7772855449669035198) {
   out_7772855449669035198[0] = state[16];
   out_7772855449669035198[1] = state[17];
   out_7772855449669035198[2] = state[18];
}
void H_33(double *state, double *unused, double *out_239566496717224414) {
   out_239566496717224414[0] = 0;
   out_239566496717224414[1] = 0;
   out_239566496717224414[2] = 0;
   out_239566496717224414[3] = 0;
   out_239566496717224414[4] = 0;
   out_239566496717224414[5] = 0;
   out_239566496717224414[6] = 0;
   out_239566496717224414[7] = 0;
   out_239566496717224414[8] = 0;
   out_239566496717224414[9] = 0;
   out_239566496717224414[10] = 0;
   out_239566496717224414[11] = 0;
   out_239566496717224414[12] = 0;
   out_239566496717224414[13] = 0;
   out_239566496717224414[14] = 0;
   out_239566496717224414[15] = 0;
   out_239566496717224414[16] = 1;
   out_239566496717224414[17] = 0;
   out_239566496717224414[18] = 0;
   out_239566496717224414[19] = 0;
   out_239566496717224414[20] = 0;
   out_239566496717224414[21] = 0;
   out_239566496717224414[22] = 0;
   out_239566496717224414[23] = 0;
   out_239566496717224414[24] = 0;
   out_239566496717224414[25] = 0;
   out_239566496717224414[26] = 0;
   out_239566496717224414[27] = 0;
   out_239566496717224414[28] = 0;
   out_239566496717224414[29] = 0;
   out_239566496717224414[30] = 0;
   out_239566496717224414[31] = 0;
   out_239566496717224414[32] = 0;
   out_239566496717224414[33] = 0;
   out_239566496717224414[34] = 0;
   out_239566496717224414[35] = 0;
   out_239566496717224414[36] = 0;
   out_239566496717224414[37] = 0;
   out_239566496717224414[38] = 0;
   out_239566496717224414[39] = 1;
   out_239566496717224414[40] = 0;
   out_239566496717224414[41] = 0;
   out_239566496717224414[42] = 0;
   out_239566496717224414[43] = 0;
   out_239566496717224414[44] = 0;
   out_239566496717224414[45] = 0;
   out_239566496717224414[46] = 0;
   out_239566496717224414[47] = 0;
   out_239566496717224414[48] = 0;
   out_239566496717224414[49] = 0;
   out_239566496717224414[50] = 0;
   out_239566496717224414[51] = 0;
   out_239566496717224414[52] = 0;
   out_239566496717224414[53] = 0;
   out_239566496717224414[54] = 0;
   out_239566496717224414[55] = 0;
   out_239566496717224414[56] = 0;
   out_239566496717224414[57] = 0;
   out_239566496717224414[58] = 0;
   out_239566496717224414[59] = 0;
   out_239566496717224414[60] = 0;
   out_239566496717224414[61] = 0;
   out_239566496717224414[62] = 1;
   out_239566496717224414[63] = 0;
   out_239566496717224414[64] = 0;
   out_239566496717224414[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_7093419124625442365) {
  H(in_vec, out_7093419124625442365);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_8122962677042080884) {
  err_fun(nom_x, delta_x, out_8122962677042080884);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_2879191858436194061) {
  inv_err_fun(nom_x, true_x, out_2879191858436194061);
}
void live_H_mod_fun(double *state, double *out_6891225504689681335) {
  H_mod_fun(state, out_6891225504689681335);
}
void live_f_fun(double *state, double dt, double *out_8358383459853452579) {
  f_fun(state,  dt, out_8358383459853452579);
}
void live_F_fun(double *state, double dt, double *out_5351070853746756336) {
  F_fun(state,  dt, out_5351070853746756336);
}
void live_h_4(double *state, double *unused, double *out_1663954682400385106) {
  h_4(state, unused, out_1663954682400385106);
}
void live_H_4(double *state, double *unused, double *out_4643929226346005397) {
  H_4(state, unused, out_4643929226346005397);
}
void live_h_9(double *state, double *unused, double *out_6878549429972817913) {
  h_9(state, unused, out_6878549429972817913);
}
void live_H_9(double *state, double *unused, double *out_6515595912099098749) {
  H_9(state, unused, out_6515595912099098749);
}
void live_h_10(double *state, double *unused, double *out_188068464861658843) {
  h_10(state, unused, out_188068464861658843);
}
void live_H_10(double *state, double *unused, double *out_4625396864627181921) {
  H_10(state, unused, out_4625396864627181921);
}
void live_h_12(double *state, double *unused, double *out_5577728301545643260) {
  h_12(state, unused, out_5577728301545643260);
}
void live_H_12(double *state, double *unused, double *out_1737329150696727599) {
  H_12(state, unused, out_1737329150696727599);
}
void live_h_35(double *state, double *unused, double *out_352367680913121423) {
  h_35(state, unused, out_352367680913121423);
}
void live_H_35(double *state, double *unused, double *out_6037795407006570715) {
  H_35(state, unused, out_6037795407006570715);
}
void live_h_32(double *state, double *unused, double *out_6025154312532695622) {
  h_32(state, unused, out_6025154312532695622);
}
void live_H_32(double *state, double *unused, double *out_6350417101894015743) {
  H_32(state, unused, out_6350417101894015743);
}
void live_h_13(double *state, double *unused, double *out_6300134216330282240) {
  h_13(state, unused, out_6300134216330282240);
}
void live_H_13(double *state, double *unused, double *out_735835764300229024) {
  H_13(state, unused, out_735835764300229024);
}
void live_h_14(double *state, double *unused, double *out_6878549429972817913) {
  h_14(state, unused, out_6878549429972817913);
}
void live_H_14(double *state, double *unused, double *out_6515595912099098749) {
  H_14(state, unused, out_6515595912099098749);
}
void live_h_33(double *state, double *unused, double *out_7772855449669035198) {
  h_33(state, unused, out_7772855449669035198);
}
void live_H_33(double *state, double *unused, double *out_239566496717224414) {
  H_33(state, unused, out_239566496717224414);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
